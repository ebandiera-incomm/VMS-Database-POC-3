CREATE OR REPLACE PROCEDURE VMSCMS.Sp_Populate_Tot_Float (PRM_INST_CODE NUMBER,
           PRM_INS_DATE  DATE,
           PRM_ERRMSG  OUT  VARCHAR2
           )
IS
CURSOR C IS
SELECT  DISTINCT CBP_PARAM_VALUE
 FROM
CMS_BIN_PARAM , CMS_PROD_MAST
WHERE CBP_PARAM_NAME = 'Currency'
AND CBP_PROFILE_CODE = CPM_PROFILE_CODE;
CURSOR C1(P_TRAN_DATE DATE,P_CURR_VALUE VARCHAR2) IS
SELECT DATE_TIME,
    TXN_CODE,
    TXN_TYPE,
    TXN_MODE,
    TXN_STATUS,
    RESPONSE_CODE,
    BUSINESS_DATE,
    BUSINESS_TIME,
    CUSTOMER_CARD_NO,
    TOTAL_AMOUNT
FROM   VMSCMS.TRANSACTIONLOG_VW  ,			--Added for VMS-5733/FSP-991
CMS_APPL_PAN ,CMS_BIN_PARAM , CMS_PROD_MAST
WHERE  CAP_PROD_CODE = CPM_PROD_CODE
AND    CAP_PAN_CODE  = CUSTOMER_CARD_NO
AND    TRUNC(DATE_TIME) = TRUNC(P_TRAN_DATE)
AND    CBP_PARAM_NAME = 'Currency'
AND    CBP_PROFILE_CODE = CPM_PROFILE_CODE
AND    CAP_PROD_CODE = CPM_PROD_CODE
AND    CBP_PARAM_VALUE = P_CURR_VALUE ;
CURSOR C3 IS
SELECT  DISTINCT CTD_TRAN_ID ,CTD_TRAN_DESC,CTD_TRAN_TYPE FROM
CMS_TMODE_DTL
WHERE CTD_TRANHEAD_FLAG = 'L';
V_TOT_AMT NUMBER;
V_CREDIT_AMT NUMBER;
V_DEBIT_AMT	 NUMBER;
BEGIN	  		   --<< MAIN_BEGIN>>
 --Sn loop for each currency


 PRM_ERRMSG := 'OK';
 FOR I IN C LOOP
  BEGIN  --< BEGIN LOOP I>>
   --Sn loop for each currency and insert into table
   FOR I2 IN C3 LOOP
    BEGIN
     SELECT SUM(TOTAL_AMOUNT)
     INTO   V_TOT_AMT
     FROM   VMSCMS.TRANSACTIONLOG_VW  ,		--Added for VMS-5733/FSP-991
	 CMS_APPL_PAN ,CMS_BIN_PARAM , CMS_PROD_MAST,CMS_TMODE_DTL
     WHERE  CAP_PROD_CODE = CPM_PROD_CODE
     AND    CAP_PAN_CODE  = CUSTOMER_CARD_NO
     AND     TRUNC(DATE_TIME) = TRUNC(PRM_INS_DATE)
     AND    CBP_PARAM_NAME 	 = 'Currency'
     AND    CBP_PROFILE_CODE = CPM_PROFILE_CODE
     AND    CAP_PROD_CODE 	 = CPM_PROD_CODE
     AND    CBP_PARAM_VALUE  = I.CBP_PARAM_VALUE
    AND    CTD_TRAN_CODE   = TXN_CODE
     AND    CTD_TRAN_ID      = I2.CTD_TRAN_ID
	 AND    RESPONSE_CODE = '00';

	 SELECT DECODE(I2.CTD_TRAN_TYPE,'CR',NVL(V_TOT_AMT,0),0),
	 		DECODE(I2.CTD_TRAN_TYPE,'DR',NVL(V_TOT_AMT,0),0)
	 INTO	V_CREDIT_AMT  ,
	 		V_DEBIT_AMT
	 FROM DUAL;
	 INSERT INTO CMS_FLOAT_TOTAL_REPORT
   		  	   (
			   	CFTR_INS_DATE,
				CFTR_CURR_CODE,
				CFTR_PARAM_KEY,
				CFTR_CREDIT_AMT
				, CFTR_DEBIT_AMT
				)
   VALUES
    	 		( TRUNC(PRM_INS_DATE ) ,
     			  I.CBP_PARAM_VALUE,
     			   I2.CTD_TRAN_DESC,
				  V_CREDIT_AMT,
				  V_DEBIT_AMT
        		);
    EXCEPTION
     WHEN OTHERS THEN
     PRM_ERRMSG := 'Error from iner loop I2' || SUBSTR(SQLERRM,1,300);
     RETURN;
    END;
		--IF I2.CTD_TRAN_TYPE =
   END LOOP;
   --En loop for each currency and insert into table
  EXCEPTION --< EXCEPTION LOOP I>>
  WHEN OTHERS THEN
     PRM_ERRMSG := 'Error from iner loop I2';
     RETURN;
    END;
 END LOOP;	 --< END  LOOP I>>
 --En loop for each currency
 EXCEPTION
  WHEN OTHERS THEN
 PRM_ERRMSG := 'Error  main ' || SUBSTR(SQLERRM,1,300);
 END;
/
SHOW ERRORS ;


